<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.alibaba.polardbx</groupId>
        <artifactId>polardbx-proxy</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>proxy-server</artifactId>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.alibaba.polardbx</groupId>
            <artifactId>proxy-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba.polardbx</groupId>
            <artifactId>proxy-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- deploy模块的packaging通常是jar，如果项目中没有java 源代码或资源文件，加上这一段配置使项目能通过构建 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                    </archive>
                    <excludes>
                        <exclude>**/logback.xml</exclude>
                        <exclude>**/config.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assemble</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <ignoredUnusedDeclaredDependencies>
                        <ignoredUnusedDeclaredDependency>com.google.guava:guava</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>org.slf4j:slf4j-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>org.slf4j:jcl-over-slf4j</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>org.slf4j:log4j-over-slf4j</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-core</ignoredUnusedDeclaredDependency>
                    </ignoredUnusedDeclaredDependencies>
                    <failOnWarning>true</failOnWarning>
                    <ignoreNonCompile>true</ignoreNonCompile>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>develop</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>!release</value>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <version>4.9.10</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <skip>false</skip>
                            <prefix>git</prefix>
                            <dotGitDirectory>../.git</dotGitDirectory>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>
                                ${project.basedir}/src/main/conf/git.properties
                            </generateGitPropertiesFilename>
                            <dateFormat>yyyy.MM.dd-HH.mm.ss</dateFormat>
                            <useNativeGit>false</useNativeGit>
                            <abbrevLength>7</abbrevLength>
                            <format>properties</format>
                            <gitDescribe>
                                <skip>false</skip>
                                <always>false</always>
                                <abbrev>7</abbrev>
                                <match>*</match>
                                <dirty>-DEVEL</dirty>
                                <forceLongFormat>false</forceLongFormat>
                            </gitDescribe>
                            <excludeProperties>
                                <excludeProperty>git.remote.origin.url</excludeProperty>
                                <excludeProperty>git.commit.message.short</excludeProperty>
                                <excludeProperty>git.commit.user.email</excludeProperty>
                                <excludeProperty>git.build.user.email</excludeProperty>
                                <excludeProperty>git.build.host</excludeProperty>
                                <excludeProperty>git.commit.id.describe-short</excludeProperty>
                                <excludeProperty>git.commit.id.abbrev</excludeProperty>
                                <excludeProperty>git.commit.id.describe</excludeProperty>
                                <excludeProperty>git.closest.tag.name</excludeProperty>
                            </excludeProperties>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- maven assembly插件需要一个描述文件 来告诉插件包的结构以及打包所需的文件来自哪里 -->
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/develop.xml</descriptor>
                            </descriptors>
                            <finalName>polardbx-proxy</finalName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>release</value>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <version>4.9.10</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <skip>false</skip>
                            <prefix>git</prefix>
                            <dotGitDirectory>../.git</dotGitDirectory>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>
                                ${project.basedir}/src/main/conf/git.properties
                            </generateGitPropertiesFilename>
                            <dateFormat>yyyy.MM.dd-HH.mm.ss</dateFormat>
                            <useNativeGit>false</useNativeGit>
                            <abbrevLength>7</abbrevLength>
                            <format>properties</format>
                            <gitDescribe>
                                <skip>false</skip>
                                <always>false</always>
                                <abbrev>7</abbrev>
                                <match>*</match>
                                <dirty>-DEVEL</dirty>
                                <forceLongFormat>false</forceLongFormat>
                            </gitDescribe>
                            <excludeProperties>
                                <excludeProperty>git.remote.origin.url</excludeProperty>
                                <excludeProperty>git.commit.message.short</excludeProperty>
                                <excludeProperty>git.commit.user.email</excludeProperty>
                                <excludeProperty>git.build.user.email</excludeProperty>
                                <excludeProperty>git.build.host</excludeProperty>
                                <excludeProperty>git.commit.id.describe-short</excludeProperty>
                                <excludeProperty>git.commit.id.abbrev</excludeProperty>
                                <excludeProperty>git.commit.id.describe</excludeProperty>
                                <excludeProperty>git.closest.tag.name</excludeProperty>
                            </excludeProperties>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- 发布模式使用的maven assembly插件描述文件 -->
                            <descriptors>
                                <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
                            </descriptors>
                            <!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
                            <finalName>${project.parent.artifactId}-${project.version}</finalName>
                            <!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
                            <outputDirectory>${project.parent.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
